/*
 * ExampleFrame.java
 *
 * Created on November 27, 2002, 1:10 AM
 */

package psl.memento.server.vem;

/**
 *
 * @author  vlad
 */
public class ExampleFrame extends javax.swing.JFrame {
    
    private boolean placingObject;
    private RoomViewerPanel rvp;
    private DataReader dr;
    private int dx, dy;
    
    /** Creates new form ExampleFrame */
    public ExampleFrame() {
        super("RoomViewer Example");
        
        initComponents();
        setSize(400, 400);
        show();        
        
        placingObject = false;
        
        // This is where the room information gets set
        
        dr = new DataReader();   // create the data store
        dr.setRoom(300, 300, 100);  // create e 300 x 300 room
        dr.addDoor('n', 100, 20);   // add a door to the north wall
        
        // create a new object, a cube with side of length 30
        // position it at location (10, 10, 10)
        RoomObject ro = new RoomObject(30, 30, 30, 200, 250, 10); 
        // set the object's type (optional)
        ro.type = "table";
        
        // add the object to the room
        dr.addRoomObject(ro);
        
        // cast the panel to a RoomViewerPanel
        // (this is only b/c netbeans forces us to use JPanels)
        rvp = (RoomViewerPanel) panel;
        
        // Tell the panel where to get its room information
        rvp.setRoomInformation(dr);
        // Draw the room!
        // the last method can be called every time changes are made to the room        
        rvp.updateRoomView();    
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        panel = new RoomViewerPanel();
        controller = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        widthField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        heightField = new javax.swing.JTextField();
        placeButton = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelMouseClicked(evt);
            }
        });

        panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                panelMouseMoved(evt);
            }
        });

        getContentPane().add(panel, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Width");
        controller.add(jLabel1);

        widthField.setColumns(6);
        widthField.setText("30");
        controller.add(widthField);

        jLabel2.setText("Height");
        controller.add(jLabel2);

        heightField.setColumns(6);
        heightField.setText("30");
        controller.add(heightField);

        placeButton.setText("Place");
        placeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeButtonActionPerformed(evt);
            }
        });

        controller.add(placeButton);

        getContentPane().add(controller, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void placeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeButtonActionPerformed
        // Add your handling code here:
        dx = Integer.parseInt(widthField.getText());
        dy = Integer.parseInt(heightField.getText());        
        placingObject = true;
    }//GEN-LAST:event_placeButtonActionPerformed

    private void panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseClicked
        // Add your handling code here:
        if (placingObject) {
            RoomObject ro = new RoomObject(dx, dy, 10, evt.getX(), evt.getY(), 0);
            dr.addRoomObject(ro);
            rvp.updateRoomView();
        }
        placingObject = false;
    }//GEN-LAST:event_panelMouseClicked

    private void panelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseMoved
        // Add your handling code here:
        
         if (placingObject) {
            rvp.redraw();   // erase the previous outline
            rvp.getGraphics().drawRect(evt.getX(), evt.getY(), dx, dy);
        }
        
    }//GEN-LAST:event_panelMouseMoved
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new ExampleFrame();      
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel controller;
    private javax.swing.JTextField heightField;
    private javax.swing.JTextField widthField;
    private javax.swing.JButton placeButton;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
    
}
